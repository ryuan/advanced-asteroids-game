#########################################################################
# Use this file to answer Review Exercises from the Big Java textbook
#########################################################################

R1.5 The following are all benefits to using Java over machine code:
1/ Java bytecode is platform independent and may be run on any system that has a JVM. This quality is known as portability.
2/ Java JIT compilers can run efficient Java programs as fast or faster than machine code programs
3/ Java is memory-managed. This reduces about 95% of runtime errors (mostly memory-related) as compared to unmanaged code.
4/ Java was designed for networking and the Internet in mind; and it is generally safer than machine code
5/ With the introduction of Java8, Java is now a declarative and functional programming language.


R2.4 Translating math expressions to Java.
1/ s = s_0 + v_0 * t + (1.0/2.0) * g * Math.pow(t, 2)
2/ fValue = pValue * Math.pow(1 + intRate / 100, years)
3/ g = 4 * Math.pow(Math.PI, 2) * Math.pow(a, 3) / (Math.pow(p, 2) * (m_1 + m_2))
4/ c = Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(GAMMA))


R2.7 Understanding integer operations, order of precedence, and integer division.
a/ 17 / 10 + 17 % 10 = 1 + 7 = 8
b/ 17 % 2 + 18 % 2 = 1 + 0 = 1
c/ (17 + 18) / 2 = 17
d/ (17 + 18) / 2.0 = 17.5
e/ (int) (0.5 * (18 + 17)) = 17
f/ (int) Math.round(0.5 * (18 + 17)) = 18


R2.14 How the compiler interprets primitive values
1/ 2 is an int
2/ 2.0 is a double
3/ '2' is a char
4/ "2" is a string
5/ "2.0" is a string


R2.17 Pseudocode understanding
1/ Split name into 3 string variables (firstName, middleName, and lastName) at spaces
2/ For each variable
3/      Print the character at index 0 after making it uppercase


R2.22 More pseudocode - you do not need to draw a diagram for this question
This pseudocode works. Using the day number 4, the starting position is 4 * 3 = 12.
Index 12 is letter 'T', so extracting substring of length 3 returns "Thu" as desired.


R3.19 Pseudocode for grade problem
1/ If quiz grade is between 90-100 inclusive
2/      Return letter grade A
3/ Else if quiz grade is between 80-89 inclusive
4/      Return letter grade B
5/ Else if quiz grade is between 70-79 inclusive
6/      Return letter grade C
7/ Else if quiz grade is between 60-69 inclusive
8/      Return letter grade D
9/ Else
10/     Return letter grade F


R3.30 Boolean expressions
a/ False
b/ True
c/ True
d/ True
e/ False
f/ False
g/ False
h/ True


R4.12 Implementing loops
Java supports while, for, and the do loop statements.
A while loop is useful for when you need to repeat code an unknown number of times until a condition is met.
A for loop is useful for when you need to execute code a specific number of times such as defined index range or items in list/array.
A do/while loop is useful for when you need to execute a code then check if a condition is met (such as checking user input).


R4.14 Calendar problem
1/ Do
2/      Get user input between 0 and 6 representing the starting day (call it startDay)
3/ While startDay is NOT between 0 and 6
4/ Do
5/      Get user input for number of days in month (call it daysMonth)
6/ While daysMonth is NOT between 28 and 31
7/ Print string "Su  M  T  W Th  F Sa"
8/ For counter from 0 to daysMonth
9/      If counter < startDay
10/        Print string "   "
11/     Else
12/        If (counter + 1) % 7 == 0
13/           Print string " " + (counter - startDay + 1) + "\n"
14/        Else
15/           Print string " " + (counter - startDay + 1) + " "